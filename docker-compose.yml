version: '3.9'

services:
  ims.api:
    image: ${DOCKER_REGISTRY-}imsapi
    container_name: ims.api
    build:
      context: .
      dockerfile: src/IMS.API/Dockerfile
    ports:
      - "8000:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
      seq:
        condition: service_started
    volumes:
      - ./.docker/SeedData:/app/SeedData:ro  # host -> container (read-only)
    environment:
      SQL_SERVER_CONNECTION_STRING: "${SQL_SERVER_CONNECTION_STRING}"
      CSV_SEED_PATH:                /app/SeedData/products_seed.csv
      SEQ_SERVER_URL:               "${SEQ_SERVER_URL}"


  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA:    "Y"
      SA_PASSWORD:    "${SQL_SERVER_SA_PASSWORD}"
      DB_NAME:        "${SQL_SERVER_DB_NAME}"
      MSSQL_PID:      "Developer"
      MSSQL_TCP_PORT: "1433"
    volumes:
      - ims_sql_data:/var/opt/mssql
      - ./.docker/mssql/init-db.sh:/usr/local/bin/init-db.sh:ro
    command: ["/bin/bash","-lc","/usr/local/bin/init-db.sh"]
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P \"$SQL_SERVER_SA_PASSWORD\" -Q \"SELECT 1\"" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: unless-stopped

  seq:
    image: datalust/seq:2024.3
    container_name: seq
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "5341:80"
    volumes:
      - ims_seq_data:/data

volumes:
  ims_sql_data:
  ims_seq_data: